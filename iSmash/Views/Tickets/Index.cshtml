@using iSmash.Helpers
@using System.Diagnostics.Eventing.Reader
@model IEnumerable<iSmash.Models.Ticket>

@{
    ViewBag.Title = "Index";
}

<h2>Tickets Index</h2>

@if (User.IsInRole("Submitter"))
{

    @*<button class="btn btn-info">
            @Html.ActionLink("Create New", "Create")
        </button>*@
    <button data-toggle="modal" data-target="#CreateNewTicketModal" type="submit" class="btn btn-1D2939 btn-block" style="background-color: #868ba1; color: #343a40">
        [ Create New ]
    </button>
}
<div class="modal fade" id="CreateNewTicketModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="background-color: #343a40">
            <div class="modal-header">
                <h6 class="modal-title">CREATE:</h6>
            </div>
            <div class="modal-body">
                <p>Please provide a name and a description.</p>
            </div>

            <div class="container-fluid">
                @using (Html.BeginForm("Create", "Tickets", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        <h4>Ticket</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.Label("ProjectId", "Attach to Project: ", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessage("ProjectId", "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <!--allow submitter to select type of ticket from dropdown menu-->
                        <div class="form-group">
                            @Html.Label("TicketTypeId", "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessage("TicketTypeId", "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <!--STATUS = "NEW" by default-->

                        <div class="form-group">
                            @Html.Label("Ticket Status (almost always should be NEW): ", "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessage("TicketStatusId ", "", new { @class = "text-danger" })
                            </div>
                        </div>


                        @*<div class="form-group">
                                @Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.SubmitterId, "SubmitterId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("SubmitterId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SubmitterId, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.DeveloperId, "DeveloperId", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("DeveloperId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            @Html.Label("Ticket Title: ", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("Title", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessage("Ticket ", "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("Description", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessage("Description", "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsArchived, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsArchived)
                                        @Html.ValidationMessageFor(model => model.IsArchived, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@




                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-info" />
                            </div>
                        </div>
                    </div>
                }

            </div>

            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>


<div class="br-section-wrapper">
    <div class="table-wrapper">
        <table id="datatable1" class="table display responsive nowrap">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayName("DEV")
                    </th>
                    <th>
                        @Html.DisplayName("PROJECT")
                    </th>
                    <th>
                        @Html.DisplayName("SUBMITTER")
                    </th>
                    <th>
                        @Html.DisplayName("PRIORITY")
                    </th>
                    <th>
                        @Html.DisplayName("STATUS")
                    </th>
                    @*<th>
                            @Html.DisplayName("TYPE")
                        </th>*@
                    <th>
                        @Html.DisplayName("TITLE")
                    </th>
                    <th>
                        @Html.DisplayName("DESCRIPTION")
                    </th>
                    <th>
                        @Html.DisplayName("CREATED")
                    </th>
                    @*<th>
                            @Html.DisplayName("UPDATED")
                        </th>
                        <th>
                            @Html.DisplayName("Archived?")
                        </th>*@
                    @if (User.IsInRole("ProjectManager") || User.IsInRole("Admin"))
                    {
                        <th>
                        </th>
                        <th>
                        </th>
                        <th>
                        </th>
                    }

                    else
                    {
                        if (User.IsInRole("Developer"))
                        {
                            <th>
                            </th>
                            <th>
                            </th>
                            <th>
                            </th>
                        }

                        else
                        {
                            <th>
                            </th>
                        }
                    }
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Developer.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Project.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Submitter.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TicketPriority.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TicketStatus.Name)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.TicketType.Name)
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Created)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.Updated)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsArchived)
                            </td>*@

                        @if (User.IsInRole("ProjectManager") || User.IsInRole("Admin"))
                        {
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                            </td>
                            <td>
                                @Html.ActionLink("Details", "Details", new { id = item.Id })
                            </td>
                            <td>
                                @Html.ActionLink("Dashboard", "Dashboard", new { id = item.Id })
                            </td>
                        }

                        else
                        {
                            if (User.IsInRole("Developer"))
                            {
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                                </td>
                                <td>
                                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                                </td>
                                <td>
                                    @Html.ActionLink("Dashboard", "Dashboard", new { id = item.Id })
                                </td>
                            }

                            else
                            {
                                <td>
                                    @Html.ActionLink("Dashboard", "Dashboard", new { id = item.Id })
                                </td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>