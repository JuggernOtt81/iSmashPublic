@using iSmash.Models
@using iSmash.ViewModels
@using System.Diagnostics.Eventing.Reader
@model IEnumerable<iSmash.Models.Project>
@*@model IEnumerable<Project>*@
@{
    ViewBag.Title = "Index";
}
<h2>Projects Index</h2>
@if (User.IsInRole("ProjectManager") || User.IsInRole("Admin"))
{
    @*<button class="btn btn-info">
        @Html.ActionLink("Create New", "Create")
    </button>*@

    <button data-toggle="modal" data-target="#DemoLogInModal" name="LogIn" type="submit" class="btn btn-1D2939 btn-block" style="background-color: #868ba1; color: #343a40">
        [ Create New ]
    </button>
}
<div class="modal fade" id="DemoLogInModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="background-color: #343a40">
            <div class="modal-header">
                <h6 class="modal-title">CREATE:</h6>
            </div>
            <div class="modal-body">
                <p>Please provide a name and a description.</p>
            </div>

            <div class="container-fluid">
                @using (Html.BeginForm("Create", "Projects", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        <h4>New Project</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("Name", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessage("Name", "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("Description", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessage("Description", "", new { @class = "text-danger" })
                            </div>
                        </div>


                        @*<div class="form-group">
                                @Html.LabelFor(model => model.IsArchived, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(model => model.IsArchived)
                                        @Html.ValidationMessageFor(model => model.IsArchived, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@


                        <div class="form-group">
                                @Html.Label("IsArchived", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.CheckBox("IsArchived")
                                        @Html.ValidationMessage("IsArchived", "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-info" />
                            </div>
                        </div>
                    </div>
                }

            </div>

            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>
<div class="table-wrapper">
    <table id="datatable1" class="table display responsive nowrap">
        <thead>
            <tr>
                @*<th class="td-narrow">
                        @Html.DisplayName("Id")
                    </th>*@
                <th class="td-narrow">
                    @Html.DisplayName("Title")
                </th>
                <th class="td-wide">
                    @Html.DisplayName("Description")
                </th>
                <th class="td-narrow">
                    @Html.DisplayName("Priority")
                </th>
                <th class="td-narrow">
                    @Html.DisplayName("Status")
                </th>
                <th class="td-mid">
                    @Html.DisplayName("Proj Mgr")
                </th>
                <th class="td-mid">
                    @Html.DisplayName("Actions")
                </th>
            </tr>
        </thead>

        <tbody>
            @{
                var db = new ApplicationDbContext();

            }
            @foreach (var item in Model)
            {
                <tr>
                    @*<td class="td-wide">
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>*@
                    <td class="td-narrow" data-order=@item.Id>
                        @* should be clickable *@
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td class="td-wide" data-order=@item.Id>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td class="td-narrow">
                        @Html.DisplayFor(modelItem => item.Priority)
                    </td>
                    <td class="td-narrow">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td class="td-mid">
                        @{
                            string pmName = "";
                            if (db.Users.Find(item.ProjectManagerId) != null)
                            {
                                pmName = db.Users.Find(item.ProjectManagerId).FullName;
                            }
                            else
                            {
                                pmName = "unassigned";
                            }
                            @pmName;
                        }
                    </td>
                    <td class="td-mid">
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>