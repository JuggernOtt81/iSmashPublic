@using iSmash.Models
@using System.Diagnostics.Eventing.Reader
@model IEnumerable<iSmash.Models.Project>
@*@model IEnumerable<Project>*@
@{
    ViewBag.Title = "Index";
}
    <h2>Projects Index</h2>
@if (User.IsInRole("ProjectManager") || User.IsInRole("Admin"))
{
    <button class="btn btn-info">
        @Html.ActionLink("Create New", "Create")
    </button>
}

<div class="table-wrapper">
    <table id="datatable1" class="table display responsive nowrap">
        <thead>
            <tr>
                @*<th class="td-narrow">
                        @Html.DisplayName("Id")
                    </th>*@
                <th class="td-narrow">
                    @Html.DisplayName("Title")
                </th>
                <th class="td-wide">
                    @Html.DisplayName("Description")
                </th>
                <th class="td-narrow">
                    @Html.DisplayName("Priority")
                </th>
                <th class="td-narrow">
                    @Html.DisplayName("Status")
                </th>
                <th class="td-mid">
                    @Html.DisplayName("Proj Mgr")
                </th>
                <th class="td-mid">
                    @Html.DisplayName("Actions")
                </th>
            </tr>
        </thead>

        <tbody>
            @{
                var db = new ApplicationDbContext();

            }
            @foreach (var item in Model)
            {
                <tr>
                    @*<td class="td-wide">
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>*@
                    <td class="td-narrow" data-order=@item.Id>
                        @* should be clickable *@
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td class="td-wide" data-order=@item.Id>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td class="td-narrow">
                        @Html.DisplayFor(modelItem => item.Priority)
                    </td>
                    <td class="td-narrow">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td class="td-mid">
                        @{
                            string pmName = "";
                            if (db.Users.Find(item.ProjectManagerId) != null)
                            {
                                pmName = db.Users.Find(item.ProjectManagerId).FullName;
                            }
                            else
                            {
                                pmName = "unassigned";
                            }
                            @pmName;
                        }
                    </td>
                    <td class="td-mid">
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>